module.exports = (sequelize, DataTypes) => {
    const Propostas_bb = sequelize.define('propostas_bb', {
        id_proposta: {
            primaryKey: true,
            autoIncrement: true,
            type: DataTypes.INTEGER
        },
        cpf: DataTypes.STRING,
        nome: DataTypes.STRING,
        valor_proposta: DataTypes.STRING,
        valor_troco: DataTypes.STRING,
        qtd_parcela: DataTypes.STRING,
        valor_parcela: DataTypes.STRING,
        valor_seguro: DataTypes.STRING,
        convenio: DataTypes.STRING,
        tipo_operacao: DataTypes.STRING,
        tipo: DataTypes.STRING,
        status: DataTypes.STRING,
        campanha: DataTypes.STRING,
        usuario: DataTypes.STRING,
        supervisor: DataTypes.STRING,
        gerente: DataTypes.STRING,
        chavej: DataTypes.STRING,
        agencia_cliente: DataTypes.STRING,
        conta_cliente: DataTypes.STRING,
        proposta: DataTypes.STRING,
        mes: DataTypes.STRING,
        data_venda: DataTypes.STRING,
        parceiro: DataTypes.STRING,
        supervisor_parceiro: DataTypes.STRING,
        gerente_parceiro: DataTypes.STRING,
        cpf_parceiro: DataTypes.STRING,
        telefone_cliente: DataTypes.STRING,
        observacao: DataTypes.STRING,
        vencimento_parcela: DataTypes.STRING,
        senha_chave: DataTypes.STRING,
        parceiro_chave: DataTypes.STRING,
        arquivo1: DataTypes.STRING,
        arquivo2: DataTypes.STRING,
        status_auditoria: DataTypes.STRING,
        motivo_auditoria: DataTypes.STRING,
        arquivo3: DataTypes.STRING,
        arquivo5: DataTypes.STRING,
        arquivo6: DataTypes.STRING,
        valor_liquido: DataTypes.STRING,
        responsavel: DataTypes.STRING,
        data_atualizacao: DataTypes.STRING,
        data_inclusao: DataTypes.STRING,
        sub_status: DataTypes.STRING,
        pontuacao: DataTypes.STRING,
        status_ranking: DataTypes.STRING,
        extrato_inss: DataTypes.STRING,
        taxa_juros: DataTypes.STRING,
        valor_seguro2: DataTypes.STRING,
        proposta_seguro: DataTypes.STRING,
        data_nascimento: DataTypes.STRING,
        naturalidade: DataTypes.STRING,
        estado_civil: DataTypes.STRING,
        rg: DataTypes.STRING,
        orgao_emissor: DataTypes.STRING,
        endereco: DataTypes.STRING,
        numero_endereco: DataTypes.STRING,
        cep: DataTypes.STRING,
        profissao: DataTypes.STRING,
        renda: DataTypes.STRING,
        empresa: DataTypes.STRING,
        email: DataTypes.STRING,
        bem_referencia: DataTypes.STRING,
        grupo: DataTypes.STRING,
        prazo: DataTypes.STRING,
        vagas: DataTypes.STRING,
        t_adm: DataTypes.STRING,
        f_res: DataTypes.STRING,
        seguro_consorcio: DataTypes.STRING,
        valor_bem: DataTypes.STRING,
        parcela_bem: DataTypes.STRING,
        assembl: DataTypes.STRING,
        vencimento: DataTypes.STRING,
        min_contemp: DataTypes.STRING,
        gravacao_parceiro: DataTypes.STRING,
        responsavel2: DataTypes.STRING,
        data_vinculo: DataTypes.STRING,
        cota: DataTypes.STRING,
        pessoa: DataTypes.STRING,
        correspondente: DataTypes.STRING,
        usuario_parceiro: DataTypes.STRING,
        funcao: DataTypes.STRING,
        vendedor: DataTypes.STRING,
        regional: DataTypes.STRING,
        loja: DataTypes.STRING,
        filial: DataTypes.STRING,
        bem: DataTypes.STRING,
        protocolo: DataTypes.STRING,
        taxa: DataTypes.STRING,
        responsavel_indica: DataTypes.STRING,
        data_atualizacao: DataTypes.STRING,
        falta: DataTypes.STRING,
        tipo_falta: DataTypes.STRING,
        data_retorno: DataTypes.STRING,
        orgao: DataTypes.STRING,
        numero: DataTypes.STRING,
        cidade: DataTypes.STRING,
        estado: DataTypes.STRING,
        data_admissao: DataTypes.STRING

    }, {
        tableName: "propostas_bb",
        timestamps: false
    });

    return Propostas_bb;
}